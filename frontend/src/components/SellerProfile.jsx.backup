import { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import axios from 'axios';
import { styles, colors, spacing, borderRadius, typography } from '../styles/theme';
import Header from './Header';

const API_URL = 'http://localhost:5000/api';

function ShopProfile() {
  const { shopSlug } = useParams();
  const navigate = useNavigate();
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [shopData, setShopData] = useState(null);
  const [isEditingAbout, setIsEditingAbout] = useState(false);
  const [aboutText, setAboutText] = useState('');
  const [aboutSaving, setAboutSaving] = useState(false);
  const [currentUserId, setCurrentUserId] = useState(null);
  const [isEditingContact, setIsEditingContact] = useState(false);
  const [contactData, setContactData] = useState({
    business_phone: '',
    phone: '',
    business_website: ''
  });
  const [contactSaving, setContactSaving] = useState(false);

  // Check if user is logged in
  useEffect(() => {
    const userData = localStorage.getItem('userData');
    if (userData) {
      const user = JSON.parse(userData);
      console.log('Current logged in user:', user);
      setCurrentUserId(user.id);
    } else {
      console.log('No user logged in');
    }
  }, []);

  useEffect(() => {
    fetchShopProfile();
  }, [shopSlug]);

  const fetchShopProfile = async () => {
    try {
      setLoading(true);
      const response = await axios.get(`${API_URL}/shop/${shopSlug}`);
      if (response.data.success) {
        setShopData(response.data.data);
        setAboutText(response.data.data.shop.business_description || '');
        setContactData({
          business_phone: response.data.data.shop.business_phone || '',
          phone: response.data.data.shop.phone || '',
          business_website: response.data.data.shop.business_website || ''
        });
        console.log('Shop owner ID:', response.data.data.shop.id);
        console.log('Current user ID:', currentUserId);
        console.log('Show edit button?', currentUserId === response.data.data.shop.id);
      } else {
        setError('Shop not found');
      }
    } catch (err) {
      console.error('Error fetching shop profile:', err);
      setError(err.response?.data?.message || 'Failed to load shop profile');
    } finally {
      setLoading(false);
    }
  };

  const handleSaveAbout = async () => {
    try {
      setAboutSaving(true);
      const token = localStorage.getItem('authToken');

      const response = await axios.put(
        `${API_URL}/shop/${shopSlug}/about`,
        { business_description: aboutText },
        { headers: { Authorization: `Bearer ${token}` } }
      );

      if (response.data.success) {
        setShopData(prev => ({
          ...prev,
          shop: { ...prev.shop, business_description: aboutText }
        }));
        setIsEditingAbout(false);
      }
    } catch (err) {
      console.error('Error updating about:', err);
      alert(err.response?.data?.message || 'Failed to update about section');
    } finally {
      setAboutSaving(false);
    }
  };

  const handleSaveContact = async () => {
    try {
      setContactSaving(true);
      const token = localStorage.getItem('authToken');

      const response = await axios.put(
        `${API_URL}/shop/${shopSlug}/contact`,
        contactData,
        { headers: { Authorization: `Bearer ${token}` } }
      );

      if (response.data.success) {
        setShopData(prev => ({
          ...prev,
          shop: {
            ...prev.shop,
            business_phone: contactData.business_phone,
            phone: contactData.phone,
            business_website: contactData.business_website
          }
        }));
        setIsEditingContact(false);
      }
    } catch (err) {
      console.error('Error updating contact:', err);
      alert(err.response?.data?.message || 'Failed to update contact information');
    } finally {
      setContactSaving(false);
    }
  };

  const handleAdClick = (adSlug) => {
    const currentLang = window.location.pathname.split('/')[1] || 'en';
    navigate(`/${currentLang}/ad/${adSlug}`);
  };

  if (loading) {
    return (
      <>
        <Header />
        <div style={{
          minHeight: '60vh',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center'
        }}>
          <div style={{ textAlign: 'center' }}>
            <div style={{
              fontSize: '48px',
              marginBottom: spacing.md
            }}>üè™</div>
            <p style={{ color: colors.text.secondary }}>Loading shop profile...</p>
          </div>
        </div>
      </>
    );
  }

  if (error) {
    return (
      <>
        <Header />
        <div style={{
          minHeight: '60vh',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center'
        }}>
          <div style={{ textAlign: 'center' }}>
            <div style={{
              fontSize: '48px',
              marginBottom: spacing.md
            }}>‚ùå</div>
            <h2 style={{ color: colors.text.primary, marginBottom: spacing.sm }}>Shop Not Found</h2>
            <p style={{ color: colors.text.secondary, marginBottom: spacing.lg }}>{error}</p>
            <button
              onClick={() => navigate(-1)}
              style={styles.button.secondary}
            >
              Go Back
            </button>
          </div>
        </div>
      </>
    );
  }

  const { shop, ads, stats } = shopData;

  return (
    <>
      <Header />
      <div style={{
        maxWidth: '1200px',
        margin: '0 auto',
        padding: spacing.xl
      }}>
        {/* Cover Photo */}
        {shop.cover_photo && (
          <div style={{
            width: '100%',
            height: '300px',
            borderRadius: borderRadius.lg,
            overflow: 'hidden',
            marginBottom: spacing.xl,
            backgroundColor: colors.background.secondary
          }}>
            <img
              src={`http://localhost:5000/uploads/covers/${shop.cover_photo}`}
              alt={shop.business_name}
              style={{
                width: '100%',
                height: '100%',
                objectFit: 'cover'
              }}
            />
          </div>
        )}

        {/* Shop Header */}
        <div style={{
          ...styles.card.default,
          marginBottom: spacing.xl
        }}>
          <div style={{
            display: 'flex',
            gap: spacing.xl,
            alignItems: 'flex-start'
          }}>
            {/* Shop Avatar */}
            <div>
              {shop.avatar ? (
                <img
                  src={`http://localhost:5000/uploads/avatars/${shop.avatar}`}
                  alt={shop.business_name}
                  style={{
                    width: '120px',
                    height: '120px',
                    borderRadius: borderRadius.full,
                    objectFit: 'cover',
                    border: `4px solid ${colors.primary}`
                  }}
                />
              ) : (
                <div style={{
                  width: '120px',
                  height: '120px',
                  borderRadius: borderRadius.full,
                  backgroundColor: colors.primary,
                  color: colors.text.inverse,
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  fontSize: '48px',
                  fontWeight: typography.fontWeight.bold
                }}>
                  {shop.business_name.charAt(0).toUpperCase()}
                </div>
              )}
            </div>

            {/* Shop Info */}
            <div style={{ flex: 1 }}>
              <div style={{
                display: 'flex',
                alignItems: 'center',
                gap: spacing.md,
                marginBottom: spacing.sm
              }}>
                <h1 style={{
                  ...styles.heading.h1,
                  margin: 0
                }}>
                  {shop.business_name || shop.full_name}
                </h1>
                {shop.business_verification_status === 'approved' && (
                  <img
                    src="/golden-badge.png"
                    alt="Verified Business"
                    title="Verified Business"
                    style={{ width: '32px', height: '32px' }}
                  />
                )}
              </div>

              <p style={{
                color: colors.text.secondary,
                fontSize: typography.fontSize.lg,
                marginBottom: spacing.md
              }}>
                Verified Business Account
              </p>

              {shop.bio && (
                <p style={{
                  color: colors.text.primary,
                  marginBottom: spacing.md
                }}>
                  {shop.bio}
                </p>
              )}

              {shop.business_description && (
                <p style={{
                  color: colors.text.primary,
                  marginBottom: spacing.md
                }}>
                  {shop.business_description}
                </p>
              )}

              {/* Shop Stats */}
              <div style={{
                display: 'flex',
                gap: spacing.xl,
                marginTop: spacing.md
              }}>
                <div>
                  <div style={{
                    fontSize: typography.fontSize.xl,
                    fontWeight: typography.fontWeight.bold,
                    color: colors.primary
                  }}>
                    {stats.total_ads}
                  </div>
                  <div style={{
                    fontSize: typography.fontSize.sm,
                    color: colors.text.secondary
                  }}>
                    Active Ads
                  </div>
                </div>
                <div>
                  <div style={{
                    fontSize: typography.fontSize.xl,
                    fontWeight: typography.fontWeight.bold,
                    color: colors.primary
                  }}>
                    {stats.total_views || 0}
                  </div>
                  <div style={{
                    fontSize: typography.fontSize.sm,
                    color: colors.text.secondary
                  }}>
                    Total Views
                  </div>
                </div>
                <div>
                  <div style={{
                    fontSize: typography.fontSize.xl,
                    fontWeight: typography.fontWeight.bold,
                    color: colors.primary
                  }}>
                    {new Date(shop.created_at).getFullYear()}
                  </div>
                  <div style={{
                    fontSize: typography.fontSize.sm,
                    color: colors.text.secondary
                  }}>
                    Member Since
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Main Content: Sidebar + Ads Grid */}
        <div style={{
          display: 'grid',
          gridTemplateColumns: '350px 1fr',
          gap: spacing.xl
        }}>
          {/* Left Sidebar - About, Contact & Location */}
          <div>
            {/* About Section */}
            <div style={{
              ...styles.card.default,
              marginBottom: spacing.xl
            }}>
              <div style={{
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center',
                marginBottom: spacing.lg
              }}>
                <h2 style={{
                  ...styles.heading.h2,
                  margin: 0
                }}>
                  About
                </h2>
                {!isEditingAbout && currentUserId === shop.id && (
                  <button
                    onClick={() => setIsEditingAbout(true)}
                    style={{
                      ...styles.button.secondary,
                      padding: `${spacing.xs} ${spacing.md}`,
                      fontSize: typography.fontSize.sm
                    }}
                  >
                    Edit
                  </button>
                )}
              </div>

              {isEditingAbout ? (
                <div>
                  <textarea
                    value={aboutText}
                    onChange={(e) => setAboutText(e.target.value)}
                    maxLength={500}
                    placeholder="Describe your business..."
                    style={{
                      width: '100%',
                      minHeight: '120px',
                      padding: spacing.md,
                      borderRadius: borderRadius.md,
                      border: `1px solid ${colors.border}`,
                      fontSize: typography.fontSize.base,
                      fontFamily: 'inherit',
                      resize: 'vertical',
                      marginBottom: spacing.sm
                    }}
                  />
                  <div style={{
                    display: 'flex',
                    justifyContent: 'space-between',
                    alignItems: 'center',
                    marginBottom: spacing.md
                  }}>
                    <span style={{
                      fontSize: typography.fontSize.sm,
                      color: colors.text.secondary
                    }}>
                      {aboutText.length}/500 characters
                    </span>
                  </div>
                  <div style={{
                    display: 'flex',
                    gap: spacing.sm
                  }}>
                    <button
                      onClick={handleSaveAbout}
                      disabled={aboutSaving}
                      style={{
                        ...styles.button.primary,
                        flex: 1,
                        opacity: aboutSaving ? 0.6 : 1
                      }}
                    >
                      {aboutSaving ? 'Saving...' : 'Save'}
                    </button>
                    <button
                      onClick={() => {
                        setIsEditingAbout(false);
                        setAboutText(shop.business_description || '');
                      }}
                      disabled={aboutSaving}
                      style={{
                        ...styles.button.secondary,
                        flex: 1
                      }}
                    >
                      Cancel
                    </button>
                  </div>
                </div>
              ) : (
                <p style={{
                  color: colors.text.primary,
                  lineHeight: 1.6,
                  whiteSpace: 'pre-wrap'
                }}>
                  {shop.business_description || 'No description available. Click Edit to add information about your business.'}
                </p>
              )}
            </div>

            {/* Contact Information */}
            <div style={{
              ...styles.card.default,
              marginBottom: spacing.xl
            }}>
              <div style={{
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center',
                marginBottom: spacing.lg
              }}>
                <h2 style={{
                  ...styles.heading.h2,
                  margin: 0
                }}>
                  Contact Information
                </h2>
                {!isEditingContact && currentUserId === shop.id && (
                  <button
                    onClick={() => setIsEditingContact(true)}
                    style={{
                      ...styles.button.secondary,
                      padding: `${spacing.xs} ${spacing.md}`,
                      fontSize: typography.fontSize.sm
                    }}
                  >
                    Edit
                  </button>
                )}
              </div>

              {isEditingContact ? (
                <div>
                  <div style={{ marginBottom: spacing.md }}>
                    <label style={{
                      display: 'block',
                      fontSize: typography.fontSize.sm,
                      color: colors.text.secondary,
                      marginBottom: spacing.xs
                    }}>
                      Business Phone
                    </label>
                    <input
                      type="tel"
                      value={contactData.business_phone}
                      onChange={(e) => setContactData({ ...contactData, business_phone: e.target.value })}
                      placeholder="01-1234567"
                      style={{
                        width: '100%',
                        padding: spacing.md,
                        borderRadius: borderRadius.md,
                        border: `1px solid ${colors.border}`,
                        fontSize: typography.fontSize.base,
                        fontFamily: 'inherit'
                      }}
                    />
                  </div>

                  <div style={{ marginBottom: spacing.md }}>
                    <label style={{
                      display: 'block',
                      fontSize: typography.fontSize.sm,
                      color: colors.text.secondary,
                      marginBottom: spacing.xs
                    }}>
                      Mobile Phone
                    </label>
                    <input
                      type="tel"
                      value={contactData.phone}
                      onChange={(e) => setContactData({ ...contactData, phone: e.target.value })}
                      placeholder="98XXXXXXXX"
                      style={{
                        width: '100%',
                        padding: spacing.md,
                        borderRadius: borderRadius.md,
                        border: `1px solid ${colors.border}`,
                        fontSize: typography.fontSize.base,
                        fontFamily: 'inherit'
                      }}
                    />
                  </div>

                  <div style={{ marginBottom: spacing.md }}>
                    <label style={{
                      display: 'block',
                      fontSize: typography.fontSize.sm,
                      color: colors.text.secondary,
                      marginBottom: spacing.xs
                    }}>
                      Website / Social Media
                    </label>
                    <input
                      type="url"
                      value={contactData.business_website}
                      onChange={(e) => setContactData({ ...contactData, business_website: e.target.value })}
                      placeholder="https://facebook.com/yourpage"
                      style={{
                        width: '100%',
                        padding: spacing.md,
                        borderRadius: borderRadius.md,
                        border: `1px solid ${colors.border}`,
                        fontSize: typography.fontSize.base,
                        fontFamily: 'inherit'
                      }}
                    />
                  </div>

                  <div style={{
                    display: 'flex',
                    gap: spacing.sm
                  }}>
                    <button
                      onClick={handleSaveContact}
                      disabled={contactSaving}
                      style={{
                        ...styles.button.primary,
                        flex: 1,
                        opacity: contactSaving ? 0.6 : 1
                      }}
                    >
                      {contactSaving ? 'Saving...' : 'Save'}
                    </button>
                    <button
                      onClick={() => {
                        setIsEditingContact(false);
                        setContactData({
                          business_phone: shop.business_phone || '',
                          phone: shop.phone || '',
                          business_website: shop.business_website || ''
                        });
                      }}
                      disabled={contactSaving}
                      style={{
                        ...styles.button.secondary,
                        flex: 1
                      }}
                    >
                      Cancel
                    </button>
                  </div>
                </div>
              ) : (
                <div style={{
                  display: 'flex',
                  flexDirection: 'column',
                  gap: spacing.lg
                }}>
                  {shop.business_phone && (
                    <div style={{ display: 'flex', alignItems: 'center', gap: spacing.sm }}>
                      <span style={{ fontSize: '24px' }}>üìû</span>
                      <div>
                        <div style={{ fontSize: typography.fontSize.sm, color: colors.text.secondary }}>Phone</div>
                        <div style={{ fontWeight: typography.fontWeight.semibold }}>{shop.business_phone}</div>
                      </div>
                    </div>
                  )}
                  {shop.phone && (
                    <div style={{ display: 'flex', alignItems: 'center', gap: spacing.sm }}>
                      <span style={{ fontSize: '24px' }}>üì±</span>
                      <div>
                        <div style={{ fontSize: typography.fontSize.sm, color: colors.text.secondary }}>Mobile</div>
                        <div style={{ fontWeight: typography.fontWeight.semibold }}>{shop.phone}</div>
                      </div>
                    </div>
                  )}
                  {shop.business_website && (
                    <div style={{ display: 'flex', alignItems: 'center', gap: spacing.sm }}>
                      <span style={{ fontSize: '24px' }}>üåê</span>
                      <div>
                        <div style={{ fontSize: typography.fontSize.sm, color: colors.text.secondary }}>Website</div>
                        <a
                          href={shop.business_website}
                          target="_blank"
                          rel="noopener noreferrer"
                          style={{ color: colors.primary, textDecoration: 'none', fontWeight: typography.fontWeight.semibold }}
                        >
                          {shop.business_website}
                        </a>
                      </div>
                    </div>
                  )}
                </div>
              )}
            </div>

            {/* Location Information */}
            <div style={styles.card.default}>
              <h2 style={{
                ...styles.heading.h2,
                marginBottom: spacing.lg
              }}>
                Location
              </h2>

              <div style={{
                display: 'flex',
                flexDirection: 'column',
                gap: spacing.lg
              }}>
                {shop.business_address && (
                  <div style={{ display: 'flex', alignItems: 'center', gap: spacing.sm }}>
                    <span style={{ fontSize: '24px' }}>üìç</span>
                    <div>
                      <div style={{ fontSize: typography.fontSize.sm, color: colors.text.secondary }}>Address</div>
                      <div style={{ fontWeight: typography.fontWeight.semibold }}>{shop.business_address}</div>
                    </div>
                  </div>
                )}
                {shop.location_name && (
                  <div style={{ display: 'flex', alignItems: 'center', gap: spacing.sm }}>
                    <span style={{ fontSize: '24px' }}>üó∫Ô∏è</span>
                    <div>
                      <div style={{ fontSize: typography.fontSize.sm, color: colors.text.secondary }}>City/Area</div>
                      <div style={{ fontWeight: typography.fontWeight.semibold }}>{shop.location_name}</div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* Right Side - Ads Grid */}
          <div>
            <h2 style={{
              ...styles.heading.h2,
              marginBottom: spacing.lg
            }}>
              Ads from {shop.business_name} ({stats.total_ads})
            </h2>

            {ads.length === 0 ? (
              <div style={{
                ...styles.card.default,
                textAlign: 'center',
                padding: spacing.xxl
              }}>
                <div style={{ fontSize: '48px', marginBottom: spacing.md }}>üì¶</div>
                <p style={{ color: colors.text.secondary }}>No active ads at the moment</p>
              </div>
            ) : (
              <div style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',
                gap: spacing.lg
              }}>
                {ads.map(ad => (
                  <div
                    key={ad.id}
                    onClick={() => handleAdClick(ad.slug)}
                    style={{
                      ...styles.card.default,
                      cursor: 'pointer',
                      transition: 'all 0.3s ease',
                      position: 'relative'
                    }}
                    onMouseEnter={(e) => {
                      e.currentTarget.style.transform = 'translateY(-4px)';
                      e.currentTarget.style.boxShadow = '0 8px 16px rgba(0, 0, 0, 0.1)';
                    }}
                    onMouseLeave={(e) => {
                      e.currentTarget.style.transform = 'translateY(0)';
                      e.currentTarget.style.boxShadow = '0 2px 4px rgba(0, 0, 0, 0.1)';
                    }}
                  >
                    {/* Promotion Badges */}
                    {ad.is_urgent && (
                      <div style={{
                        position: 'absolute',
                        top: spacing.sm,
                        left: spacing.sm,
                        backgroundColor: colors.danger,
                        color: colors.text.inverse,
                        padding: `${spacing.xs} ${spacing.sm}`,
                        borderRadius: borderRadius.md,
                        fontSize: typography.fontSize.xs,
                        fontWeight: typography.fontWeight.bold,
                        zIndex: 1
                      }}>
                        URGENT
                      </div>
                    )}

                    <div style={{
                      width: '100%',
                      height: '200px',
                      backgroundColor: colors.background.secondary,
                      borderRadius: borderRadius.md,
                      marginBottom: spacing.md,
                      overflow: 'hidden'
                    }}>
                      {ad.primary_image ? (
                        <img
                          src={`http://localhost:5000/uploads/ads/${ad.primary_image}`}
                          alt={ad.title}
                          style={{
                            width: '100%',
                            height: '100%',
                            objectFit: 'cover'
                          }}
                        />
                      ) : (
                        <div style={{
                          width: '100%',
                          height: '100%',
                          display: 'flex',
                          alignItems: 'center',
                          justifyContent: 'center',
                          color: colors.text.secondary,
                          fontSize: '48px'
                        }}>
                          üì∑
                        </div>
                      )}
                    </div>

                    <h3 style={{
                      ...styles.heading.h4,
                      marginBottom: spacing.sm,
                      overflow: 'hidden',
                      textOverflow: 'ellipsis',
                      whiteSpace: 'nowrap'
                    }}>
                      {ad.title}
                    </h3>

                    <div style={{
                      fontSize: typography.fontSize.xl,
                      fontWeight: typography.fontWeight.bold,
                      color: colors.primary,
                      marginBottom: spacing.sm
                    }}>
                      NPR {parseFloat(ad.price).toLocaleString()}
                    </div>

                    <div style={{
                      fontSize: typography.fontSize.sm,
                      color: colors.text.secondary,
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'center'
                    }}>
                      <span>{ad.location_name || 'No location'}</span>
                      <span>{new Date(ad.created_at).toLocaleDateString()}</span>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>
    </>
  );
}

export default ShopProfile;
